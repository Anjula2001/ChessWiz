name: ChessWizzz CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Backend Tests and Build
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install Stockfish
      run: |
        sudo apt-get update
        sudo apt-get install -y stockfish
        which stockfish
        stockfish --help
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint backend code
      run: npm run lint || echo "Linting not configured yet"
    
    - name: Run backend tests
      run: npm test || echo "Tests not configured yet"
    
    - name: Test Stockfish integration
      run: |
        # Test that Stockfish is accessible
        echo "Testing Stockfish..."
        echo "uci" | stockfish | head -20

  # Frontend Tests and Build
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint frontend code
      run: npm run lint || echo "Linting not configured yet"
    
    - name: Run frontend tests
      run: npm test || echo "Tests not configured yet"
    
    - name: Build frontend
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build-${{ matrix.node-version }}
        path: frontend/dist/

  # Integration Test
  integration:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install Stockfish
      run: |
        sudo apt-get update
        sudo apt-get install -y stockfish
    
    - name: Install all dependencies
      run: npm run install:all
    
    - name: Build frontend
      run: cd frontend && npm run build
    
    - name: Start backend in background
      run: |
        cd backend && npm start &
        echo $! > backend.pid
        sleep 10
      
    - name: Test backend health
      run: |
        curl -f http://localhost:3001/health || echo "Health check failed"
    
    - name: Test chess engine endpoint
      run: |
        curl -X POST http://localhost:3001/getBestMove \
          -H "Content-Type: application/json" \
          -d '{"fen":"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1","depth":5}' \
          || echo "Chess engine test failed"
    
    - name: Cleanup
      run: |
        if [ -f backend.pid ]; then
          kill $(cat backend.pid) || true
        fi

  # Deploy to GitHub Pages (Frontend only)
  deploy:
    runs-on: ubuntu-latest
    needs: [backend, frontend, integration]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      run: cd frontend && npm ci
    
    - name: Build frontend for production
      run: cd frontend && npm run build
      env:
        # For GitHub Pages deployment, you might need to adjust the base URL
        VITE_BASE_URL: /chesswizzz/
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./frontend/dist
        publish_branch: gh-pages
        cname: chesswizzz.yourdomain.com  # Optional: if you have a custom domain
